// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/issue": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create Electricty Issue",
                "parameters": [
                    {
                        "description": "Example Request Body",
                        "name": "reqBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Issue"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.Form": {
            "type": "object",
            "properties": {
                "consumerno": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "feeder": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "issueID": {
                    "type": "integer"
                },
                "jobdescription": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "nooflabours": {
                    "type": "integer"
                },
                "postno": {
                    "type": "string"
                },
                "section": {
                    "type": "string"
                },
                "substation": {
                    "type": "string"
                },
                "transformer": {
                    "type": "string"
                },
                "typeofjob": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "voltage": {
                    "type": "integer"
                }
            }
        },
        "models.Issue": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "desc": {
                    "type": "string"
                },
                "form": {
                    "$ref": "#/definitions/models.Form"
                },
                "id": {
                    "type": "integer"
                },
                "post_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "KSEB Web Server",
	Description:      "Provide Info About KSEB Web Server].",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
